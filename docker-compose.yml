#version: '3.8'
#
#services:
#  postgres:
#    container_name: postgres_container
#    image: postgres
#    environment:
#      POSTGRES_USER: sanjula
#      POSTGRES_PASSWORD: sanjula
#      POSTGRES_DB: jobapp
#      PGDATA: /data/postgres
#    volumes:
#      - postgres:/data/postgres
#    ports:
#      - "5432:5432"
#    networks:
#      - postgres
#    restart: unless-stopped
#
#  pgadmin:
#    container_name: pgadmin_container
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
#      PGADMIN_DEFAULT_PASSWORD: sanjula
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    volumes:
#      - pgadmin:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    networks:
#      - postgres
#    restart: unless-stopped
#
#networks:
#  postgres:
#    driver: bridge
#
#volumes:
#  postgres:
#  pgadmin:


version: '3.8'

services:
  app:
    container_name: spring_app
    build:
      context: .
      dockerfile: Dockerfile
    image: spring-boot-jobapp:latest
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/jobapp
      SPRING_DATASOURCE_USERNAME: sanjula
      SPRING_DATASOURCE_PASSWORD: sanjula
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: postgres_container
    environment:
      POSTGRES_USER: sanjula
      POSTGRES_PASSWORD: sanjula
      POSTGRES_DB: jobapp
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: sanjula
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:



